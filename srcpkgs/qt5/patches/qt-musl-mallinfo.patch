--- qtwebengine/src/3rdparty/chromium/base/trace_event/malloc_dump_provider.cc	2017-01-03 10:28:53.000000000 +0100
+++ qtwebengine/src/3rdparty/chromium/base/trace_event/malloc_dump_provider.cc	2017-02-21 22:04:37.993963440 +0100
@@ -128,7 +128,7 @@
   // fixed quantum, so the excess region will not be resident.
   // See crrev.com/1531463004 for detailed explanation.
   resident_size = stats.max_size_in_use;
-#else
+#elif defined(__GLIBC__)
   struct mallinfo info = mallinfo();
   DCHECK_GE(info.arena + info.hblkhd, info.uordblks);
 
--- qtwebengine/src/3rdparty/chromium/content/child/content_child_helpers.cc	2017-01-03 10:28:53.000000000 +0100
+++ qtwebengine/src/3rdparty/chromium/content/child/content_child_helpers.cc	2017-02-21 22:09:13.161343477 +0100
@@ -25,7 +25,7 @@
 // though, this provides only a partial and misleading value.
 // Unfortunately some telemetry benchmark rely on it and these need to
 // be refactored before getting rid of this. See crbug.com/581365 .
-#if defined(OS_LINUX) || defined(OS_ANDROID)
+#if (defined(OS_LINUX) || defined(OS_ANDROID)) && defined(__GLIBC__)
 size_t GetMemoryUsageKB() {
   struct mallinfo minfo = mallinfo();
   uint64_t mem_usage =
